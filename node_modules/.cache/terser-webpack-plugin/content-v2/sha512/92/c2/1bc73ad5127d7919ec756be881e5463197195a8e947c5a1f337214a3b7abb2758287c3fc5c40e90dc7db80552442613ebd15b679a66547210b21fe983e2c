{"map":"{\"version\":3,\"sources\":[\"/Users/gowthambujju/Gowtham/developement/reactapp/RefugeeV4/backend/Refugee/src/pages/Bank.jsx\",\"/Users/gowthambujju/Gowtham/developement/reactapp/RefugeeV4/backend/Refugee/src/components/comps/Menu.jsx\",\"/Users/gowthambujju/Gowtham/developement/reactapp/RefugeeV4/backend/Refugee/src/components/App.js\",\"/Users/gowthambujju/Gowtham/developement/reactapp/RefugeeV4/backend/Refugee/src/serviceWorker.js\",\"/Users/gowthambujju/Gowtham/developement/reactapp/RefugeeV4/backend/Refugee/src/index.js\"],\"names\":[\"Bank\",\"react_default\",\"a\",\"createElement\",\"Menu\",\"Fragment\",\"Navbar_default\",\"bg\",\"variant\",\"Container_default\",\"Brand\",\"href\",\"Nav_default\",\"className\",\"Link\",\"dist\",\"to\",\"App\",\"comps_Menu\",\"react_router_dist\",\"path\",\"element\",\"Home\",\"Bank_Bank\",\"Myprofile\",\"Component\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_components_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"fetch\",\"response\",\"contentType\",\"headers\",\"get\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react'\\n\\nexport const Bank = () => {\\n  return (\\n    <div>Bank</div>\\n  )\\n}\\n\",\"import Container from 'react-bootstrap/Container';\\nimport Nav from 'react-bootstrap/Nav';\\nimport Navbar from 'react-bootstrap/Navbar';\\n//import {Link, NavLink} from 'react-router-dom';\\n//import Container from 'react-bootstrap/Container';\\nimport { Link } from 'react-router-dom';\\nimport React from 'react';\\nfunction Menu() {\\n  return (\\n    <>\\n      <Navbar bg=\\\"dark\\\" variant=\\\"dark\\\">\\n        <Container>\\n          <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n          <Nav className=\\\"me-auto\\\">\\n          <Nav.Link>\\n              {' '}\\n              <Link className=\\\"text-decoration-none text-white\\\" to=\\\"/\\\">\\n                Home\\n              </Link>\\n            </Nav.Link>\\n            <Nav.Link>\\n              {' '}\\n              <Link className=\\\"text-decoration-none text-white\\\" to=\\\"/profile\\\">\\n                Profile\\n              </Link>\\n            </Nav.Link>\\n            <Nav.Link>\\n              {' '}\\n              <Link className=\\\"text-decoration-none text-white\\\" to=\\\"/bank\\\">\\n                Bank\\n              </Link>\\n            </Nav.Link>\\n          </Nav>\\n        </Container>\\n      </Navbar>\\n      <br />\\n    </>\\n  );\\n}\\n\\nexport default Menu;\",\"import React, { Component } from 'react';\\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\\nimport './App.css';\\nimport {Bank} from '../pages/Bank'\\nimport {Home} from '../pages/Home'\\nimport {Myprofile} from '../pages/Myprofile'\\nimport Menu from './comps/Menu';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div>\\n        <h1>Hello</h1>\\n        <BrowserRouter>\\n         <Menu />\\n         <Routes>\\n          <Route path=\\\"/\\\" element={<Home />} />\\n          <Route path=\\\"/bank\\\" element={<Bank />} />\\n          <Route path='/Myprofile' element = {<Myprofile />} />\\n        </Routes>\\n        </BrowserRouter>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport 'bootstrap/dist/css/bootstrap.css'\\nimport App from './components/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.register();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{41:function(e,n){},42:function(e,n){},44:function(e,n,t){e.exports=t(86)},52:function(e,n,t){},86:function(e,n,t){\"use strict\";t.r(n);var a=t(1),o=t.n(a),r=t(26),l=t.n(r),c=(t(50),t(13)),i=t(14),s=t(16),u=t(12),m=t(15),d=t(18),f=t(0),h=(t(52),function(){return o.a.createElement(\"div\",null,\"Bank\")}),w=t(41),v=t(42),E=t(43),p=t.n(E),g=t(19),b=t.n(g),k=t(28),y=t.n(k);var x=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(y.a,{bg:\"dark\",variant:\"dark\"},o.a.createElement(p.a,null,o.a.createElement(y.a.Brand,{href:\"#home\"},\"Navbar\"),o.a.createElement(b.a,{className:\"me-auto\"},o.a.createElement(b.a.Link,null,\" \",o.a.createElement(d.b,{className:\"text-decoration-none text-white\",to:\"/\"},\"Home\")),o.a.createElement(b.a.Link,null,\" \",o.a.createElement(d.b,{className:\"text-decoration-none text-white\",to:\"/profile\"},\"Profile\")),o.a.createElement(b.a.Link,null,\" \",o.a.createElement(d.b,{className:\"text-decoration-none text-white\",to:\"/bank\"},\"Bank\"))))),o.a.createElement(\"br\",null))},j=(t(39),function(e){function n(){return Object(c.a)(this,n),Object(s.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(m.a)(n,e),Object(i.a)(n,[{key:\"render\",value:function(){return o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,\"Hello\"),o.a.createElement(d.a,null,o.a.createElement(x,null),o.a.createElement(f.c,null,o.a.createElement(f.a,{path:\"/\",element:o.a.createElement(w.Home,null)}),o.a.createElement(f.a,{path:\"/bank\",element:o.a.createElement(h,null)}),o.a.createElement(f.a,{path:\"/Myprofile\",element:o.a.createElement(v.Myprofile,null)}))))}}]),n}(a.Component)),N=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function W(e,n){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;null!=t&&(t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\"),n&&n.onUpdate&&n.onUpdate(e)):(console.log(\"Content is cached for offline use.\"),n&&n.onSuccess&&n.onSuccess(e)))})}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}l.a.render(o.a.createElement(j,null),document.getElementById(\"root\")),function(e){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location.href).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var n=\"\".concat(\"\",\"/service-worker.js\");N?(function(e,n){fetch(e).then(function(t){var a=t.headers.get(\"content-type\");404===t.status||null!=a&&-1===a.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):W(e,n)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(n,e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\")})):W(n,e)})}}()}},[[44,2,1]]]);","extractedComments":[]}
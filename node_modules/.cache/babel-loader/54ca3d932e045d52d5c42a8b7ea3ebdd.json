{"ast":null,"code":"import _regeneratorRuntime from \"/Users/gowthambujju/Gowtham/developement/reactapp/Refugee_git/refugee_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/gowthambujju/Gowtham/developement/reactapp/Refugee_git/refugee_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport React from \"react\";\nimport Refugeeabi from '../../abis/Refugee.json';\nvar selectedAccount;\n\nvar Weeb3 =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var provider, providerURL, web3, networkId, contractaddr, Refugee;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = window.ethereum;\n            providerURL = process.env.PROVIDERURL || \"http://localhost:8545\"; // used to connect Metamask with our App\n\n            if (typeof provider !== 'undefined') {\n              provider.request({\n                method: 'eth_requestAccounts'\n              }).then(function (accounts) {\n                console.log(accounts);\n              }).catch(function (err) {\n                console.log(err);\n              });\n            }\n\n            window.etherum.on('accountschanged', function (accounts) {\n              selectedAccount = accounts[0];\n              console.log(\"Select Account is changed to \".concat(selectedAccount));\n            });\n            web3 = new Web3(provider);\n            _context.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context.sent;\n            contractaddr = Refugeeabi.networks[networkId].address;\n            Refugee = new web3.eth.Contract(Refugeeabi.abi, contractaddr);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function Weeb3() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Weeb3; //export const","map":{"version":3,"sources":["/Users/gowthambujju/Gowtham/developement/reactapp/Refugee_git/refugee_system/src/components/comps/weeb3.js"],"names":["useEffect","Web3","React","Refugeeabi","selectedAccount","Weeb3","provider","window","ethereum","providerURL","process","env","PROVIDERURL","request","method","then","accounts","console","log","catch","err","etherum","on","web3","eth","net","getId","networkId","contractaddr","networks","address","Refugee","Contract","abi"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAwB,yBAAxB;AACA,IAAIC,eAAJ;;AACA,IAAOC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEPC,YAAAA,QAFO,GAEIC,MAAM,CAACC,QAFX;AAILC,YAAAA,WAJK,GAISC,OAAO,CAACC,GAAR,CAAYC,WAAZ,IAA2B,uBAJpC,EAQX;;AACA,gBAAG,OAAON,QAAP,KAAoB,WAAvB,EAAmC;AAC/BA,cAAAA,QAAQ,CAACO,OAAT,CAAiB;AAACC,gBAAAA,MAAM,EAAC;AAAR,eAAjB,EAAiDC,IAAjD,CAAsD,UAAAC,QAAQ,EAAG;AAC7DC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACP,eAFG,EAGHG,KAHG,CAGG,UAACC,GAAD,EAAQ;AACXH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACC,eALD;AAMH;;AAEDb,YAAAA,MAAM,CAACc,OAAP,CAAeC,EAAf,CAAkB,iBAAlB,EAAqC,UAASN,QAAT,EAAkB;AACnDZ,cAAAA,eAAe,GAAGY,QAAQ,CAAC,CAAD,CAA1B;AACAC,cAAAA,OAAO,CAACC,GAAR,wCAA4Cd,eAA5C;AACH,aAHD;AAKMmB,YAAAA,IAvBK,GAuBE,IAAItB,IAAJ,CAASK,QAAT,CAvBF;AAAA;AAAA,mBAyBaiB,IAAI,CAACC,GAAL,CAASC,GAAT,CAAaC,KAAb,EAzBb;;AAAA;AAyBLC,YAAAA,SAzBK;AA2BLC,YAAAA,YA3BK,GA2BWzB,UAAU,CAAC0B,QAAX,CAAoBF,SAApB,EAA+BG,OA3B1C;AA6BLC,YAAAA,OA7BK,GA6BK,IAAIR,IAAI,CAACC,GAAL,CAASQ,QAAb,CAAsB7B,UAAU,CAAC8B,GAAjC,EAAqCL,YAArC,CA7BL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALvB,KAAK;AAAA;AAAA;AAAA,GAAZ;;AAqCA,eAAeA,KAAf,C,CAEA","sourcesContent":["import { useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport React from \"react\";\nimport Refugeeabi from  '../../abis/Refugee.json';\nlet selectedAccount;\nconst  Weeb3 = async ()=> {\n\n    let provider = window.ethereum;\n\n    const providerURL = process.env.PROVIDERURL || \"http://localhost:8545\";\n\n    \n\n    // used to connect Metamask with our App\n    if(typeof provider !== 'undefined'){\n        provider.request({method:'eth_requestAccounts'}).then(accounts =>{\n            console.log(accounts);\n    })\n    .catch((err) =>{\n        console.log(err);\n        })\n    }\n\n    window.etherum.on('accountschanged', function(accounts){\n        selectedAccount = accounts[0];\n        console.log(`Select Account is changed to ${selectedAccount}`);\n    });\n\n    const web3 = new Web3(provider);\n\n    const networkId = await web3.eth.net.getId();\n\n    const contractaddr =  Refugeeabi.networks[networkId].address;\n\n    const Refugee = new web3.eth.Contract(Refugeeabi.abi,contractaddr);\n\n\n\n\n\n};\n\nexport default Weeb3;\n\n//export const "]},"metadata":{},"sourceType":"module"}